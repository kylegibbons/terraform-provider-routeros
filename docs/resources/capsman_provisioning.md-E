# routeros_capsman_provisioning (Resource)


## Example Usage
```terraform
resource "routeros_capsman_configuration" "test_configuration" {
	name = "cfg1"
}

resource "routeros_capsman_provisioning" "test_provisioning" {
	master_configuration = "cfg1"
	action               = "create-disabled"
	name_prefix          = "cap-"

	depends_on = [
		routeros_capsman_configuration.test_configuration,
	]
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `master_configuration` (String) If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created

### Optional

- `___id___` (Number) <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
- `___path___` (String) <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
- `action` (String) Provisioning action.
- `comment` (String)
- `common_name_regexp` (String) Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
- `disabled` (Boolean)
- `hw_supported_modes` (String) Match radios by supported wireless modes.
- `identity_regexp` (String) Regular expression to match radios by router identity.
- `ip_address_ranges` (String) Match CAPs with IPs within configured address range.
- `name_format` (String) Specify the syntax of the CAP interface name creation.
- `name_prefix` (String) Name prefix which can be used in the name-format for creating the CAP interface names.
- `radio_mac` (String) MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
- `slave_configurations` (String) If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.

### Read-Only

- `id` (String) The ID of this resource.

## Import
Import is supported using the following syntax:
```shell
#The ID can be found via API or the terminal
#The command for the terminal is ->  :put [/caps-man/provisioning get [print show-ids]]
terraform import routeros_capsman_provisioning.test_provisioning "*B"
```
