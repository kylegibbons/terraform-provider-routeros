# routeros_capsman_configuration (Resource)


## Example Usage
```terraform
resource "routeros_capsman_configuration" "test_configuration" {
	comment              = "Comment"
	country              = "no_country_set"
	disconnect_timeout   = "1s150ms"
	distance             = "indoors"
	frame_lifetime       = "0.12" // 120ms
	guard_interval       = "long"
	hide_ssid            = true
	hw_protection_mode   = "rts-cts"
	hw_retries           = 1
	installation         = "indoor"
	keepalive_frames     = "enabled"
	load_balancing_group = ""
	max_sta_count        = 1
	mode                 = "ap"
	multicast_helper     = "full"
	name                 = "test_configuration"
	rx_chains            = [1, 3]
	ssid                 = "SSID"
	tx_chains            = [0, 2]
}

resource "routeros_capsman_channel" "test_channel" {
	name = "test-channel-config"
}

resource "routeros_capsman_datapath" "test_datapath" {
	name = "test-datapath-config"
}

resource "routeros_capsman_rates" "test_rates" {
	name = "test-rates-config"
}

resource "routeros_capsman_security" "test_security" {
	name = "test-security-config"
}

resource "routeros_capsman_configuration" "test_configuration_2" {
	name = "test_configuration_name"

	channel = {
	  config                = "${routeros_capsman_channel.test_channel.name}"
	  band                  = "2ghz-b/g/n"
	  control_channel_width = "10mhz"
	  extension_channel     = "eCee"
	  frequency             = 2412
	  reselect_interval     = "1h"
	  save_selected         = "true"
	  secondary_frequency   = "disabled"
	  skip_dfs_channels     = "true"
	  tx_power              = 20
	}
  
	datapath = {
	  config                      = "${routeros_capsman_datapath.test_datapath.name}"
	  arp                         = "local-proxy-arp"
	  bridge                      = "bridge"
	  bridge_cost                 = "100"
	  bridge_horizon              = "200"
	  client_to_client_forwarding = "true"
	  interface_list              = "static"
	  l2mtu                       = "1450"
	  local_forwarding            = "true"
	  mtu                         = "1500"
	  vlan_id                     = "101"
	  vlan_mode                   = "no-tag"
	//   openflow_switch             = "aaa"
	  }
  
	rates = {
	  config            = "${routeros_capsman_rates.test_rates.name}"
	  basic             = "1Mbps,5.5Mbps,6Mbps,18Mbps,36Mbps,54Mbps"
	  ht_basic_mcs      = "mcs-0,mcs-7,mcs-11,mcs-14,mcs-16,mcs-21"
	  ht_supported_mcs  = "mcs-3,mcs-8,mcs-10,mcs-13,mcs-17,mcs-18"
	  supported         = "2Mbps,11Mbps,9Mbps,12Mbps,24Mbps,48Mbps"
	  vht_basic_mcs     = "none"
	  vht_supported_mcs = "mcs0-9,mcs0-7"
	}
  
	security = {
	  config                = "${routeros_capsman_security.test_security.name}"
	  authentication_types  = "wpa-psk,wpa-eap"
	  disable_pmkid         = "true"
	  eap_methods           = "eap-tls,passthrough"
	  eap_radius_accounting = "true"
	  encryption            = "aes-ccm,tkip"
	  group_encryption      = "aes-ccm"
	  group_key_update      = "1h"
	  passphrase            = "AAAAAAAAA"
	  tls_certificate       = "none"
	  tls_mode              = "verify-certificate"
	}
  
	depends_on = [
	  routeros_capsman_channel.test_channel,
	  routeros_capsman_datapath.test_datapath,
	  routeros_capsman_rates.test_rates,
	  routeros_capsman_security.test_security
	]
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `name` (String) Changing the name of this resource will force it to be recreated.
	> The links of other configuration properties to this resource may be lost!
	> Changing the name of the resource outside of a Terraform will result in a loss of control integrity for that resource!

### Optional

- `___id___` (Number) <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
- `___path___` (String) <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
- `___ts___` (String) <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
- `channel` (Map of String) Channel inline settings.
- `comment` (String)
- `country` (String) Limits available bands, frequencies and maximum transmit power for each frequency. Also specifies default value of scan-list. Value no_country_set is an FCC compliant set of channels.
- `datapath` (Map of String) Datapath inline settings.
- `disconnect_timeout` (String) This interval is measured from third sending failure on the lowest data rate. At this point 3 * (hw-retries + 1) frame transmits on the lowest data rate had failed. During disconnect-timeout packet transmission will be retried with on-fail-retry-time interval. If no frame can be transmitted successfully during disconnect-timeout, the connection is closed, and this event is logged as "extensive data loss". Successful frame transmission resets this timer.
- `distance` (String) How long to wait for confirmation of unicast frames (ACKs) before considering transmission unsuccessful, or in short ACK-Timeout.
- `frame_lifetime` (String) Discard frames that have been queued for sending longer than frame-lifetime. By default, when value of this property is 0, frames are discarded only after connection is closed (format: 0.00 sec).
- `guard_interval` (String) Whether to allow use of short guard interval (refer to 802.11n MCS specification to see how this may affect throughput). "any" will use either short or long, depending on data rate, "long" will use long.
- `hide_ssid` (Boolean) This property has effect only in AP mode. Setting it to yes can remove this network from the list of wireless networks that are shown by some client software. Changing this setting does not improve the security of the wireless network, because SSID is included in other frames sent by the AP.
- `hw_protection_mode` (String) Frame protection support property. [See docs](https://wiki.mikrotik.com/wiki/Manual:Interface/Wireless#Frame_protection_support_(RTS/CTS)).
- `hw_retries` (Number) Number of times sending frame is retried without considering it a transmission failure. [See docs](https://wiki.mikrotik.com/wiki/Manual:Interface/Wireless)
- `installation` (String) Adjusts scan-list to use indoor, outdoor or all frequencies for the country that is set.
- `keepalive_frames` (String) If a client has not communicated for around 20 seconds, AP sends a "keepalive-frame".
- `load_balancing_group` (String) Tags the interface to the load balancing group. For a client to connect to interface in this group, the interface should have the same number of already connected clients as all other interfaces in the group or smaller. Useful in setups where ranges of CAPs mostly overlap.
- `max_sta_count` (Number) Maximum number of associated clients.
- `mode` (String) Set operational mode. Only **ap** currently supported.
- `multicast_helper` (String) When set to full multicast packets will be sent with unicast destination MAC address, resolving multicast problem on a wireless link. This option should be enabled only on the access point, clients should be configured in station-bridge mode.
- `rates` (Map of String) Rates inline settings.
- `rx_chains` (List of Number) Which antennas to use for receive.
- `security` (Map of String) Security inline settings.
- `ssid` (String) SSID (service set identifier) is a name broadcast in the beacons that identifies wireless network.
- `tx_chains` (List of Number) Which antennas to use for transmit.

### Read-Only

- `id` (String) The ID of this resource.

## Import
Import is supported using the following syntax:
```shell
# Import with the name of the CAPsMAN configuration in case of the example use test_configuration_name
terraform import routeros_capsman_configuration.test_configuration_2 test_configuration_name
```
