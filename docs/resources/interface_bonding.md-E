# routeros_interface_bonding (Resource)


## Example Usage
```terraform
resource "routeros_interface_bonding" "test" {
  name   = "bonding-test"
  slaves = ["ether3", "ether4"]
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `name` (String) Name of the bonding interface.
- `slaves` (Set of String) At least two ethernet-like interfaces separated by a comma, which will be used for bonding

### Optional

- `___id___` (Number) <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
- `___path___` (String) <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
- `arp` (String) Address Resolution Protocol for the interface. disabled - the interface will not use ARP enabled - the interface will use ARP proxy-arp - the interface will use the ARP proxy feature reply-only -the interface will only reply to requests originated from matching IPaddress/MAC address combinations which are entered as static entries inthe '/ip arp' table. No dynamic entries will be automatically stored inthe '/ip arp' table. Therefore for communications to be successful, avalid static entry must already exist.
- `arp_interval` (String) Time in milliseconds defines how often to monitor ARP requests.
- `arp_ip_targets` (String) IP target address which will be monitored if link-monitoring is set to arp. You can specify multiple IP addresses, separated by a comma.
- `arp_timeout` (String) ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
- `comment` (String)
- `disabled` (Boolean)
- `down_delay` (String) If a link failure has been detected, the bonding interface is disabled for a down-delay time. The value should be a multiple of mii-interval, otherwise, it will be rounded down to the nearest value. This property only has an effect when link-monitoring is set to mii.
- `forced_mac_address` (String) Bydefault, the bonding interface will use the MAC address of the firstselected slave interface. This property allows to configure static MACaddress for the bond interface (all zeros, broadcast or multicastaddresses will not apply). RouterOS will automatically change the MACaddress for slave interfaces and it will be visible in /interface ethernet configuration export.
- `lacp_rate` (String) LinkAggregation Control Protocol rate specifies how often to exchange withLACPDUs between bonding peers. Used to determine whether a link is up orother changes have occurred in the network. LACP tries to adapt tothese changes providing failover.
- `lacp_user_key` (Number) Specifiesthe upper 10 bits of the port key. The lower 6 bits are automaticallyassigned based on individual port link speed and duplex. The setting isavailable only since RouterOS v7.3.
- `link_monitoring` (String) Method to use for monitoring the link (whether it is up or down) arp - uses Address Resolution Protocol to determine whether the remote interface is reachable mii - uses Media Independent Interface to determine link status. Link status determination relies on the device driver. none - no method for link monitoring is used. Note: some bonding modes require specific link monitoring to work properly.
- `mii_interval` (String) How often to monitor the link for failures (the parameter used only if link-monitoring is mii)
- `min_links` (Number) How many active slave links needed for bonding to become active.
- `mlag_id` (Number) ChangesMLAG ID for bonding interface. The same MLAG ID should be used on bothpeer devices to successfully create a single MLAG. See more details on MLAG .
- `mode` (String) Specifies one of the bonding policies:
  * 802.3ad -IEEE 802.3ad dynamic link aggregation. In this mode, the interfaces areaggregated in a group where each slave shares the same speed. Itprovides fault tolerance and load balancing. Slave selection foroutgoing traffic is done according to the transmit-hash-policy
  * active-backup - provides link backup. Only one slave can be active at a time. Another slave only becomes active, if the first one fails.
  * balance-alb - adaptive load balancing. The same as balance-tlb but received traffic is also balanced. The device driver should have support for changing it's MAC address.
  * balance-rr -round-robin load balancing. Slaves in a bonding interface will transmitand receive data in sequential order. It provides load balancing andfault tolerance.
  * balance-tlb -Outgoing traffic is distributed according to the current load on eachslave. Incoming traffic is not balanced and is received by the currentslave. If receiving slave fails, then another slave takes the MACaddress of the failed slave.
  * balance-xor - Transmit based on the selected transmit-hash-policy. This mode provides load balancing and fault tolerance.
  * broadcast -Broadcasts the same data on all interfaces at once. This provides faulttolerance but slows down traffic throughput on some slow machines.
- `mtu` (Number) MaximumTransmit Unit in bytes. Must be smaller or equal to the smallest L2MTUvalue of a bonding slave. L2MTU of a bonding interface is determined bythe lowest L2MTU value among its slave interfaces.
- `primary` (String) Controlsthe primary interface between active slave ports, works only foractive-backup, balance-tlb and balance-alb modes. For active-backupmode, it controls which running interface is supposed to send andreceive the traffic. For balance-tlb mode, it controls which runninginterface is supposed to receive all the traffic, but for balance-albmode, it controls which interface is supposed to receive the unbalanced  traffic (the non-IPv4 traffic). When none of the interfaces are selectedas primary, device will automatically select the interface that isconfigured as the first one.
- `transmit_hash_policy` (String) Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes:
  * layer-2 -Uses XOR of hardware MAC addresses to generate the hash. This algorithm  will place all traffic to a particular network peer on the same slave.This algorithm is 802.3ad compliant.
  * layer-2-and-3 -This policy uses a combination of layer2 and layer3 protocolinformation to generate the hash. Uses XOR of hardware MAC addresses andIP addresses to generate the hash. This algorithm will place alltraffic to a particular network peer on the same slave. For non-IPtraffic, the formula is the same as for the layer2 transmit hash policy.This policy is intended to provide a more balanced distribution oftraffic than layer2 alone, especially in environments where a layer3gateway device is required to reach most destinations. This algorithm is802.3ad compliant.
  * layer-3-and-4 - This policyuses upper layer protocol information, when available, to generate thehash. This allows for traffic to a particular network peer to spanmultiple slaves, although a single connection will not span multipleslaves. For fragmented TCP or UDP packets and all other IP protocoltraffic, the source and destination port information is omitted. Fornon-IP traffic, the formula is the same as for the layer2 transmit hashpolicy. This algorithm is not fully 802.3ad compliant.
- `up_delay` (String) If a link has been brought up, the bonding interface is disabled for up-delay time and after this time it is enabled. The value should be a multiple of mii-interval , otherwise, it will be rounded down to the nearest value. This property only has an effect when link-monitoring is set to mii.

### Read-Only

- `id` (String) The ID of this resource.
- `mac_address` (String) Current mac address.
- `running` (Boolean)

## Import
Import is supported using the following syntax:
```shell
#The ID can be found via API or the terminal
#The command for the terminal is -> :put [/interface/bonding get [print show-ids]]
terraform import routeros_interface_bonding.test "*0"
```
