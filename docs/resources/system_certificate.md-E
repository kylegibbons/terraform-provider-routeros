# routeros_system_certificate (Resource)


## Example Usage
```terraform
resource "routeros_system_certificate" "root_ca" {
  name        = "Test-Root-CA"
  common_name = "RootCA"
  key_usage   = ["key-cert-sign", "crl-sign"]
  trusted     = true
  // Sign Root CA.
  sign {
  }
}

// digitalSignature: Used for entity and data origin authentication with integrity.
// keyEncipherment:  Used to encrypt symmetric key, which is then transferred to target.
// keyAgreement:     Enables use of key agreement to establish symmetric key with target. 

resource "routeros_system_certificate" "server_crt" {
  name        = "Server-Certificate"
  common_name = "server.crt"
  // KUs: igitalSignature, keyEncipherment or keyAgreement
  key_usage = ["digital-signature", "key-encipherment", "tls-server"]
  sign {
    ca = routeros_system_certificate.root_ca.name
  }
}

resource "routeros_system_certificate" "client_crt" {
  name        = "Client-Certificate"
  common_name = "client.crt"
  key_size    = "prime256v1"
  // KUs: digitalSignature and/or keyAgreement
  key_usage = ["digital-signature", "key-agreement", "tls-client"]
  sign {
    ca = routeros_system_certificate.root_ca.name
  }
}

resource "routeros_system_certificate" "unsigned_crt" {
  name             = "Unsigned-Certificate"
  common_name      = "unsigned.crt"
  key_size         = "1024"
  subject_alt_name = "DNS:router.lan,DNS:myrouter.lan,IP:192.168.88.1"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `common_name` (String) Common Name (e.g. server FQDN or YOUR name).
- `name` (String) Name of the certificate. Name can be edited.

### Optional

- `___id___` (Number) <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
- `___path___` (String) <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
- `___skip___` (String) <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
- `copy_from` (String)
- `country` (String) Country Name (2 letter code).
- `days_valid` (Number) Certificate lifetime.
- `key_size` (String)
- `key_usage` (Set of String) Detailed key usage descriptions can be found in RFC 5280.
- `locality` (String) Locality Name (eg, city).
- `organization` (String) Organizational Unit Name (eg, section)
- `sign` (Block Set) (see [below for nested schema](#nestedblock--sign))
- `state` (String) State or Province Name (full name).
- `subject_alt_name` (String) SANs (subject alternative names).
- `trusted` (Boolean) If set to yes certificate is included 'in trusted certificate chain'.
- `unit` (String) Organizational Unit Name (eg, section).

### Read-Only

- `akid` (String) Authority Key Identifier.
- `authority` (String)
- `ca` (String)
- `ca_crl_host` (String)
- `ca_fingerprint` (String)
- `crl` (String)
- `digest_algorithm` (Boolean)
- `dsa` (Boolean)
- `expired` (Boolean) Set to true if certificate is expired.
- `expires_after` (String)
- `fingerprint` (String)
- `id` (String) The ID of this resource.
- `invalid_after` (String) The date after which certificate wil be invalid.
- `invalid_before` (String) The date before which certificate is invalid.
- `issued` (String)
- `issuer` (String)
- `key_type` (String)
- `private_key` (Boolean)
- `req_fingerprint` (String)
- `revoked` (String)
- `scep_url` (String)
- `serial_number` (String)
- `skid` (String) Subject Key Identifier.
- `smart_card_key` (String)
- `status` (String) Shows current status of scep client.

<a id="nestedblock--sign"></a>
### Nested Schema for `sign`

Optional:

- `ca` (String) Which CA to use if signing issued certificates.
- `ca_crl_host` (String) CRL host if issuing CA certificate.

## Import
Import is supported using the following syntax:
```shell
#The ID can be found via API or the terminal
#The command for the terminal is -> :put [/certificate get [print show-ids]]
#If you plan to manipulate the certificate requiring signing, you need to correctly fill in the sign{} section.
#Changes in the sign{} section will not cause changes in the certificate. It's not a bug, it's a feature!
terraform import routeros_system_certificate.client *9D
```
